ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f1xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/system_stm32f1xx.c"
  18              		.global	SystemCoreClock
  19              		.section	.data.SystemCoreClock,"aw"
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 0024F400 		.word	16000000
  25              		.global	AHBPrescTable
  26              		.section	.rodata.AHBPrescTable,"a"
  27              		.align	2
  30              	AHBPrescTable:
  31 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  31      00000000 
  31      01020304 
  31      06
  32 000d 070809   		.ascii	"\007\010\011"
  33              		.global	APBPrescTable
  34              		.section	.rodata.APBPrescTable,"a"
  35              		.align	2
  38              	APBPrescTable:
  39 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  39      01020304 
  40              		.section	.text.SystemInit,"ax",%progbits
  41              		.align	1
  42              		.global	SystemInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	SystemInit:
  48              	.LFB65:
   1:Core/Src/system_stm32f1xx.c **** /**
   2:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Core/Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f1xx.c ****   * 
   7:Core/Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
   8:Core/Src/system_stm32f1xx.c ****   *     user application:
   9:Core/Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  10:Core/Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  11:Core/Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  12:Core/Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 2


  13:Core/Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  14:Core/Src/system_stm32f1xx.c ****   *
  15:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Core/Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  17:Core/Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  18:Core/Src/system_stm32f1xx.c ****   *                                     
  19:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Core/Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  21:Core/Src/system_stm32f1xx.c ****   *                                 during program execution.
  22:Core/Src/system_stm32f1xx.c ****   *
  23:Core/Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  24:Core/Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  25:Core/Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  26:Core/Src/system_stm32f1xx.c ****   *
  27:Core/Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  28:Core/Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  29:Core/Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  30:Core/Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
  31:Core/Src/system_stm32f1xx.c ****   *    configuration.
  32:Core/Src/system_stm32f1xx.c ****   *        
  33:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32f1xx.c ****   * @attention
  35:Core/Src/system_stm32f1xx.c ****   *
  36:Core/Src/system_stm32f1xx.c ****   * Copyright (c) 2017-2021 STMicroelectronics.
  37:Core/Src/system_stm32f1xx.c ****   * All rights reserved.
  38:Core/Src/system_stm32f1xx.c ****   *
  39:Core/Src/system_stm32f1xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  40:Core/Src/system_stm32f1xx.c ****   * in the root directory of this software component.
  41:Core/Src/system_stm32f1xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  42:Core/Src/system_stm32f1xx.c ****   *
  43:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  44:Core/Src/system_stm32f1xx.c ****   */
  45:Core/Src/system_stm32f1xx.c **** 
  46:Core/Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  47:Core/Src/system_stm32f1xx.c ****   * @{
  48:Core/Src/system_stm32f1xx.c ****   */
  49:Core/Src/system_stm32f1xx.c **** 
  50:Core/Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  51:Core/Src/system_stm32f1xx.c ****   * @{
  52:Core/Src/system_stm32f1xx.c ****   */  
  53:Core/Src/system_stm32f1xx.c ****   
  54:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  55:Core/Src/system_stm32f1xx.c ****   * @{
  56:Core/Src/system_stm32f1xx.c ****   */
  57:Core/Src/system_stm32f1xx.c **** 
  58:Core/Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  59:Core/Src/system_stm32f1xx.c **** 
  60:Core/Src/system_stm32f1xx.c **** /**
  61:Core/Src/system_stm32f1xx.c ****   * @}
  62:Core/Src/system_stm32f1xx.c ****   */
  63:Core/Src/system_stm32f1xx.c **** 
  64:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  65:Core/Src/system_stm32f1xx.c ****   * @{
  66:Core/Src/system_stm32f1xx.c ****   */
  67:Core/Src/system_stm32f1xx.c **** 
  68:Core/Src/system_stm32f1xx.c **** /**
  69:Core/Src/system_stm32f1xx.c ****   * @}
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 3


  70:Core/Src/system_stm32f1xx.c ****   */
  71:Core/Src/system_stm32f1xx.c **** 
  72:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  73:Core/Src/system_stm32f1xx.c ****   * @{
  74:Core/Src/system_stm32f1xx.c ****   */
  75:Core/Src/system_stm32f1xx.c **** 
  76:Core/Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  77:Core/Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  78:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  79:Core/Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  80:Core/Src/system_stm32f1xx.c **** 
  81:Core/Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
  82:Core/Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
  83:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  84:Core/Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
  85:Core/Src/system_stm32f1xx.c **** 
  86:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
  87:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
  88:Core/Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
  89:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
  90:Core/Src/system_stm32f1xx.c **** 
  91:Core/Src/system_stm32f1xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  92:Core/Src/system_stm32f1xx.c ****          configuration. */
  93:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  94:Core/Src/system_stm32f1xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  95:Core/Src/system_stm32f1xx.c ****      remap of boot address selected */
  96:Core/Src/system_stm32f1xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  97:Core/Src/system_stm32f1xx.c **** 
  98:Core/Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  99:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 100:Core/Src/system_stm32f1xx.c ****      in Sram else user remap will be done in Flash. */
 101:Core/Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 102:Core/Src/system_stm32f1xx.c **** #if defined(VECT_TAB_SRAM)
 103:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 104:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 105:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 106:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 107:Core/Src/system_stm32f1xx.c **** #else
 108:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 109:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 110:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 111:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 112:Core/Src/system_stm32f1xx.c **** #endif /* VECT_TAB_SRAM */
 113:Core/Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 114:Core/Src/system_stm32f1xx.c **** 
 115:Core/Src/system_stm32f1xx.c **** /******************************************************************************/
 116:Core/Src/system_stm32f1xx.c **** 
 117:Core/Src/system_stm32f1xx.c **** /**
 118:Core/Src/system_stm32f1xx.c ****   * @}
 119:Core/Src/system_stm32f1xx.c ****   */
 120:Core/Src/system_stm32f1xx.c **** 
 121:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 122:Core/Src/system_stm32f1xx.c ****   * @{
 123:Core/Src/system_stm32f1xx.c ****   */
 124:Core/Src/system_stm32f1xx.c **** 
 125:Core/Src/system_stm32f1xx.c **** /**
 126:Core/Src/system_stm32f1xx.c ****   * @}
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 4


 127:Core/Src/system_stm32f1xx.c ****   */
 128:Core/Src/system_stm32f1xx.c **** 
 129:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 130:Core/Src/system_stm32f1xx.c ****   * @{
 131:Core/Src/system_stm32f1xx.c ****   */
 132:Core/Src/system_stm32f1xx.c **** 
 133:Core/Src/system_stm32f1xx.c ****   /* This variable is updated in three ways:
 134:Core/Src/system_stm32f1xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 135:Core/Src/system_stm32f1xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 136:Core/Src/system_stm32f1xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 137:Core/Src/system_stm32f1xx.c ****          Note: If you use this function to configure the system clock; then there
 138:Core/Src/system_stm32f1xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 139:Core/Src/system_stm32f1xx.c ****                variable is updated automatically.
 140:Core/Src/system_stm32f1xx.c ****   */
 141:Core/Src/system_stm32f1xx.c **** uint32_t SystemCoreClock = 16000000;
 142:Core/Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 143:Core/Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 144:Core/Src/system_stm32f1xx.c **** 
 145:Core/Src/system_stm32f1xx.c **** /**
 146:Core/Src/system_stm32f1xx.c ****   * @}
 147:Core/Src/system_stm32f1xx.c ****   */
 148:Core/Src/system_stm32f1xx.c **** 
 149:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 150:Core/Src/system_stm32f1xx.c ****   * @{
 151:Core/Src/system_stm32f1xx.c ****   */
 152:Core/Src/system_stm32f1xx.c **** 
 153:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 154:Core/Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 155:Core/Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 156:Core/Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 157:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 158:Core/Src/system_stm32f1xx.c **** 
 159:Core/Src/system_stm32f1xx.c **** /**
 160:Core/Src/system_stm32f1xx.c ****   * @}
 161:Core/Src/system_stm32f1xx.c ****   */
 162:Core/Src/system_stm32f1xx.c **** 
 163:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 164:Core/Src/system_stm32f1xx.c ****   * @{
 165:Core/Src/system_stm32f1xx.c ****   */
 166:Core/Src/system_stm32f1xx.c **** 
 167:Core/Src/system_stm32f1xx.c **** /**
 168:Core/Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 169:Core/Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 170:Core/Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 171:Core/Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 172:Core/Src/system_stm32f1xx.c ****   * @param  None
 173:Core/Src/system_stm32f1xx.c ****   * @retval None
 174:Core/Src/system_stm32f1xx.c ****   */
 175:Core/Src/system_stm32f1xx.c **** void SystemInit (void)
 176:Core/Src/system_stm32f1xx.c **** {
  49              		.loc 1 176 1
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 80B4     		push	{r7}
  55              	.LCFI0:
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 5


  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 7, -4
  58 0002 00AF     		add	r7, sp, #0
  59              	.LCFI1:
  60              		.cfi_def_cfa_register 7
 177:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 178:Core/Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 179:Core/Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 180:Core/Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 181:Core/Src/system_stm32f1xx.c **** #endif 
 182:Core/Src/system_stm32f1xx.c **** 
 183:Core/Src/system_stm32f1xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 184:Core/Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 185:Core/Src/system_stm32f1xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM.
 186:Core/Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 187:Core/Src/system_stm32f1xx.c **** }
  61              		.loc 1 187 1
  62 0004 00BF     		nop
  63 0006 BD46     		mov	sp, r7
  64              	.LCFI2:
  65              		.cfi_def_cfa_register 13
  66              		@ sp needed
  67 0008 80BC     		pop	{r7}
  68              	.LCFI3:
  69              		.cfi_restore 7
  70              		.cfi_def_cfa_offset 0
  71 000a 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE65:
  75              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  76              		.align	1
  77              		.global	SystemCoreClockUpdate
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	SystemCoreClockUpdate:
  83              	.LFB66:
 188:Core/Src/system_stm32f1xx.c **** 
 189:Core/Src/system_stm32f1xx.c **** /**
 190:Core/Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 191:Core/Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 192:Core/Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 193:Core/Src/system_stm32f1xx.c ****   *         other parameters.
 194:Core/Src/system_stm32f1xx.c ****   *           
 195:Core/Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 196:Core/Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 197:Core/Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 198:Core/Src/system_stm32f1xx.c ****   *     
 199:Core/Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 200:Core/Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 201:Core/Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 202:Core/Src/system_stm32f1xx.c ****   *             
 203:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 204:Core/Src/system_stm32f1xx.c ****   *                                              
 205:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 206:Core/Src/system_stm32f1xx.c ****   *                          
 207:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 6


 208:Core/Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 209:Core/Src/system_stm32f1xx.c ****   *         
 210:Core/Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 211:Core/Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 212:Core/Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 213:Core/Src/system_stm32f1xx.c ****   *    
 214:Core/Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 215:Core/Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 216:Core/Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 217:Core/Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 218:Core/Src/system_stm32f1xx.c ****   *                
 219:Core/Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 220:Core/Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 221:Core/Src/system_stm32f1xx.c ****   * @param  None
 222:Core/Src/system_stm32f1xx.c ****   * @retval None
 223:Core/Src/system_stm32f1xx.c ****   */
 224:Core/Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 225:Core/Src/system_stm32f1xx.c **** {
  84              		.loc 1 225 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI4:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 85B0     		sub	sp, sp, #20
  94              	.LCFI5:
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI6:
  98              		.cfi_def_cfa_register 7
 226:Core/Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
  99              		.loc 1 226 12
 100 0006 0023     		movs	r3, #0
 101 0008 FB60     		str	r3, [r7, #12]
 102              		.loc 1 226 22
 103 000a 0023     		movs	r3, #0
 104 000c BB60     		str	r3, [r7, #8]
 105              		.loc 1 226 36
 106 000e 0023     		movs	r3, #0
 107 0010 7B60     		str	r3, [r7, #4]
 227:Core/Src/system_stm32f1xx.c **** 
 228:Core/Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 229:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 230:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 231:Core/Src/system_stm32f1xx.c **** 
 232:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 233:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 234:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 235:Core/Src/system_stm32f1xx.c ****     
 236:Core/Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 237:Core/Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 108              		.loc 1 237 12
 109 0012 2F4B     		ldr	r3, .L11
 110 0014 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 7


 111              		.loc 1 237 7
 112 0016 03F00C03 		and	r3, r3, #12
 113 001a FB60     		str	r3, [r7, #12]
 238:Core/Src/system_stm32f1xx.c ****   
 239:Core/Src/system_stm32f1xx.c ****   switch (tmp)
 114              		.loc 1 239 3
 115 001c FB68     		ldr	r3, [r7, #12]
 116 001e 082B     		cmp	r3, #8
 117 0020 11D0     		beq	.L3
 118 0022 FB68     		ldr	r3, [r7, #12]
 119 0024 082B     		cmp	r3, #8
 120 0026 3AD8     		bhi	.L4
 121 0028 FB68     		ldr	r3, [r7, #12]
 122 002a 002B     		cmp	r3, #0
 123 002c 03D0     		beq	.L5
 124 002e FB68     		ldr	r3, [r7, #12]
 125 0030 042B     		cmp	r3, #4
 126 0032 04D0     		beq	.L6
 127 0034 33E0     		b	.L4
 128              	.L5:
 240:Core/Src/system_stm32f1xx.c ****   {
 241:Core/Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 242:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 129              		.loc 1 242 23
 130 0036 274B     		ldr	r3, .L11+4
 131 0038 274A     		ldr	r2, .L11+8
 132 003a 1A60     		str	r2, [r3]
 243:Core/Src/system_stm32f1xx.c ****       break;
 133              		.loc 1 243 7
 134 003c 33E0     		b	.L7
 135              	.L6:
 244:Core/Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 245:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 136              		.loc 1 245 23
 137 003e 254B     		ldr	r3, .L11+4
 138 0040 254A     		ldr	r2, .L11+8
 139 0042 1A60     		str	r2, [r3]
 246:Core/Src/system_stm32f1xx.c ****       break;
 140              		.loc 1 246 7
 141 0044 2FE0     		b	.L7
 142              	.L3:
 247:Core/Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 248:Core/Src/system_stm32f1xx.c **** 
 249:Core/Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 250:Core/Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 143              		.loc 1 250 20
 144 0046 224B     		ldr	r3, .L11
 145 0048 5B68     		ldr	r3, [r3, #4]
 146              		.loc 1 250 15
 147 004a 03F47013 		and	r3, r3, #3932160
 148 004e BB60     		str	r3, [r7, #8]
 251:Core/Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 149              		.loc 1 251 22
 150 0050 1F4B     		ldr	r3, .L11
 151 0052 5B68     		ldr	r3, [r3, #4]
 152              		.loc 1 251 17
 153 0054 03F48033 		and	r3, r3, #65536
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 8


 154 0058 7B60     		str	r3, [r7, #4]
 252:Core/Src/system_stm32f1xx.c ****       
 253:Core/Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 254:Core/Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 155              		.loc 1 254 27
 156 005a BB68     		ldr	r3, [r7, #8]
 157 005c 9B0C     		lsrs	r3, r3, #18
 158              		.loc 1 254 15
 159 005e 0233     		adds	r3, r3, #2
 160 0060 BB60     		str	r3, [r7, #8]
 255:Core/Src/system_stm32f1xx.c ****       
 256:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 161              		.loc 1 256 10
 162 0062 7B68     		ldr	r3, [r7, #4]
 163 0064 002B     		cmp	r3, #0
 164 0066 06D1     		bne	.L8
 257:Core/Src/system_stm32f1xx.c ****       {
 258:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 259:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 165              		.loc 1 259 45
 166 0068 BB68     		ldr	r3, [r7, #8]
 167 006a 1C4A     		ldr	r2, .L11+12
 168 006c 02FB03F3 		mul	r3, r2, r3
 169              		.loc 1 259 25
 170 0070 184A     		ldr	r2, .L11+4
 171 0072 1360     		str	r3, [r2]
 260:Core/Src/system_stm32f1xx.c ****       }
 261:Core/Src/system_stm32f1xx.c ****       else
 262:Core/Src/system_stm32f1xx.c ****       {
 263:Core/Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 264:Core/Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 265:Core/Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 266:Core/Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 267:Core/Src/system_stm32f1xx.c ****  #else
 268:Core/Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 269:Core/Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 270:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 271:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 272:Core/Src/system_stm32f1xx.c ****         }
 273:Core/Src/system_stm32f1xx.c ****         else
 274:Core/Src/system_stm32f1xx.c ****         {
 275:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 276:Core/Src/system_stm32f1xx.c ****         }
 277:Core/Src/system_stm32f1xx.c ****  #endif
 278:Core/Src/system_stm32f1xx.c ****       }
 279:Core/Src/system_stm32f1xx.c **** #else
 280:Core/Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 281:Core/Src/system_stm32f1xx.c ****       
 282:Core/Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 283:Core/Src/system_stm32f1xx.c ****       {
 284:Core/Src/system_stm32f1xx.c ****          pllmull += 2U;
 285:Core/Src/system_stm32f1xx.c ****       }
 286:Core/Src/system_stm32f1xx.c ****       else
 287:Core/Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 288:Core/Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 289:Core/Src/system_stm32f1xx.c ****       }
 290:Core/Src/system_stm32f1xx.c ****             
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 9


 291:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 292:Core/Src/system_stm32f1xx.c ****       {
 293:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 294:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 295:Core/Src/system_stm32f1xx.c ****       }
 296:Core/Src/system_stm32f1xx.c ****       else
 297:Core/Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 298:Core/Src/system_stm32f1xx.c ****         
 299:Core/Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 300:Core/Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 301:Core/Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 302:Core/Src/system_stm32f1xx.c ****         
 303:Core/Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 304:Core/Src/system_stm32f1xx.c ****         { 
 305:Core/Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 306:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 307:Core/Src/system_stm32f1xx.c ****         }
 308:Core/Src/system_stm32f1xx.c ****         else
 309:Core/Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 310:Core/Src/system_stm32f1xx.c ****           
 311:Core/Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 312:Core/Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 313:Core/Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 314:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 315:Core/Src/system_stm32f1xx.c ****         }
 316:Core/Src/system_stm32f1xx.c ****       }
 317:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 318:Core/Src/system_stm32f1xx.c ****       break;
 172              		.loc 1 318 7
 173 0074 17E0     		b	.L7
 174              	.L8:
 269:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 175              		.loc 1 269 17
 176 0076 164B     		ldr	r3, .L11
 177 0078 5B68     		ldr	r3, [r3, #4]
 269:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 178              		.loc 1 269 24
 179 007a 03F40033 		and	r3, r3, #131072
 269:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 180              		.loc 1 269 12
 181 007e 002B     		cmp	r3, #0
 182 0080 06D0     		beq	.L10
 271:Core/Src/system_stm32f1xx.c ****         }
 183              		.loc 1 271 47
 184 0082 BB68     		ldr	r3, [r7, #8]
 185 0084 154A     		ldr	r2, .L11+12
 186 0086 02FB03F3 		mul	r3, r2, r3
 271:Core/Src/system_stm32f1xx.c ****         }
 187              		.loc 1 271 27
 188 008a 124A     		ldr	r2, .L11+4
 189 008c 1360     		str	r3, [r2]
 190              		.loc 1 318 7
 191 008e 0AE0     		b	.L7
 192              	.L10:
 275:Core/Src/system_stm32f1xx.c ****         }
 193              		.loc 1 275 39
 194 0090 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 10


 195 0092 114A     		ldr	r2, .L11+8
 196 0094 02FB03F3 		mul	r3, r2, r3
 275:Core/Src/system_stm32f1xx.c ****         }
 197              		.loc 1 275 27
 198 0098 0E4A     		ldr	r2, .L11+4
 199 009a 1360     		str	r3, [r2]
 200              		.loc 1 318 7
 201 009c 03E0     		b	.L7
 202              	.L4:
 319:Core/Src/system_stm32f1xx.c **** 
 320:Core/Src/system_stm32f1xx.c ****     default:
 321:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 203              		.loc 1 321 23
 204 009e 0D4B     		ldr	r3, .L11+4
 205 00a0 0D4A     		ldr	r2, .L11+8
 206 00a2 1A60     		str	r2, [r3]
 322:Core/Src/system_stm32f1xx.c ****       break;
 207              		.loc 1 322 7
 208 00a4 00BF     		nop
 209              	.L7:
 323:Core/Src/system_stm32f1xx.c ****   }
 324:Core/Src/system_stm32f1xx.c ****   
 325:Core/Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 326:Core/Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 327:Core/Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 210              		.loc 1 327 28
 211 00a6 0A4B     		ldr	r3, .L11
 212 00a8 5B68     		ldr	r3, [r3, #4]
 213              		.loc 1 327 52
 214 00aa 1B09     		lsrs	r3, r3, #4
 215 00ac 03F00F03 		and	r3, r3, #15
 216              		.loc 1 327 22
 217 00b0 0B4A     		ldr	r2, .L11+16
 218 00b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 219              		.loc 1 327 7
 220 00b4 FB60     		str	r3, [r7, #12]
 328:Core/Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 329:Core/Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 221              		.loc 1 329 19
 222 00b6 074B     		ldr	r3, .L11+4
 223 00b8 1A68     		ldr	r2, [r3]
 224 00ba FB68     		ldr	r3, [r7, #12]
 225 00bc 22FA03F3 		lsr	r3, r2, r3
 226 00c0 044A     		ldr	r2, .L11+4
 227 00c2 1360     		str	r3, [r2]
 330:Core/Src/system_stm32f1xx.c **** }
 228              		.loc 1 330 1
 229 00c4 00BF     		nop
 230 00c6 1437     		adds	r7, r7, #20
 231              	.LCFI7:
 232              		.cfi_def_cfa_offset 4
 233 00c8 BD46     		mov	sp, r7
 234              	.LCFI8:
 235              		.cfi_def_cfa_register 13
 236              		@ sp needed
 237 00ca 80BC     		pop	{r7}
 238              	.LCFI9:
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 11


 239              		.cfi_restore 7
 240              		.cfi_def_cfa_offset 0
 241 00cc 7047     		bx	lr
 242              	.L12:
 243 00ce 00BF     		.align	2
 244              	.L11:
 245 00d0 00100240 		.word	1073876992
 246 00d4 00000000 		.word	SystemCoreClock
 247 00d8 00127A00 		.word	8000000
 248 00dc 00093D00 		.word	4000000
 249 00e0 00000000 		.word	AHBPrescTable
 250              		.cfi_endproc
 251              	.LFE66:
 253              		.text
 254              	.Letext0:
 255              		.file 2 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 256              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 257              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 258              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 259              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
ARM GAS  C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f1xx.c
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:23     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:20     .data.SystemCoreClock:00000000 $d
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:30     .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:27     .rodata.AHBPrescTable:00000000 $d
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:38     .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:35     .rodata.APBPrescTable:00000000 $d
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:41     .text.SystemInit:00000000 $t
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:47     .text.SystemInit:00000000 SystemInit
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:76     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:82     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\binhc\AppData\Local\Temp\ccIzyd41.s:245    .text.SystemCoreClockUpdate:000000d0 $d
                           .group:00000000 wm4.0.15fcea3127febf2d56d1bdc4f5ccb439
                           .group:00000000 wm4.stm32f1xx.h.38.e862c4e1b39ca120fca296a79f75a275
                           .group:00000000 wm4.stm32f103xb.h.37.7c5fb130aa158ead5441dda9799c1941
                           .group:00000000 wm4._newlib_version.h.4.6d111ab2e95434b664b53815e5c8ccba
                           .group:00000000 wm4.features.h.33.3e67abe6fb64142d4f6fa9496796153c
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:00000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:00000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:00000000 wm4.stm32f103xb.h.572.e8b8d889d857e2c56f82ca03c5328917
                           .group:00000000 wm4.stm32f1xx.h.161.0d1b9fd26c53008e1116394047fa1b84
                           .group:00000000 wm4.stm32f1xx_hal_conf.h.22.3522f0118f665b92073dbb241fe101cd
                           .group:00000000 wm4.stm32_hal_legacy.h.22.d050171c85a9d8567d1f9a012537baa2
                           .group:00000000 wm4.stddef.h.39.3e0425629195acf083c9561151306b4d
                           .group:00000000 wm4.stm32f1xx_hal_def.h.56.354d0a4bf0f6ef7af10e3429b7628481
                           .group:00000000 wm4.stm32f1xx_hal_rcc.h.93.3fadb58bdef0723b74d9eb798753b168
                           .group:00000000 wm4.stm32f1xx_hal_rcc_ex.h.20.5a464c1dc9022dc2a67fe45b2054f77c
                           .group:00000000 wm4.stm32f1xx_hal_rcc.h.1200.d6cbb5717f01cee373a6e1fba84d9163
                           .group:00000000 wm4.stm32f1xx_hal_gpio.h.21.0099da253a68660e916195d3e8928be3
                           .group:00000000 wm4.stm32f1xx_hal_gpio_ex.h.21.93f1f3ec7660fa76375def81b976f73c
                           .group:00000000 wm4.stm32f1xx_hal_gpio.h.262.7df79220ec7519ba80c1763e6b4854a6
                           .group:00000000 wm4.stm32f1xx_hal_exti.h.21.a7f1b393a0c9b2b56b72ccdbb8dee508
                           .group:00000000 wm4.stm32f1xx_hal_dma.h.21.11e5a204ed6aa790b1cdae2e4192bc9d
                           .group:00000000 wm4.stm32f1xx_hal_dma_ex.h.21.d438f745b4c04dc23f9f569190526864
                           .group:00000000 wm4.stm32f1xx_hal_dma.h.408.14794a3f8621230c9ac7fca0cacf3e57
                           .group:00000000 wm4.stm32f1xx_hal_cortex.h.21.6ab92041a8778f53d2d2d96b3825535a
                           .group:00000000 wm4.stm32f1xx_hal_flash.h.20.2db7f614c43999568df8c1bd8d5f2459
                           .group:00000000 wm4.stm32f1xx_hal_flash_ex.h.20.c1d01fb364bcc8befd238a2d45469cc1
                           .group:00000000 wm4.stm32f1xx_hal_i2c.h.21.6a947c870feb456d84d10dd871ee01bd
                           .group:00000000 wm4.stm32f1xx_hal_pwr.h.21.ec3e2cfd4c26fffa32fc4ff0a8ac7390
                           .group:00000000 wm4.stm32f1xx_hal_tim.h.21.79b480304c9b95dc7e752c6196c7f717
                           .group:00000000 wm4.stm32f1xx_hal.h.87.60093b86a987865736d7cddecce3c235

NO UNDEFINED SYMBOLS
